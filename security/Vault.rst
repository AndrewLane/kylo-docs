
=====
Vault
=====

Overview
--------

Kylo uses HashiCorp Vault to securely store secret information, such as user credentials to databases, S3 buckets etc.
For detailed information about Vault review |HashiCorp_Vault_Link|, while here we will show how Kylo integrates with Vault.


Installation
------------

If you already use Vault you can skip to :ref:`Kylo Configuration <kylo_configuration>`

Vault would normally be installed and run by a specific user. Lets create this user:

 .. code-block:: shell

   useradd -r -m -s /bin/bash vault

 ..


Use standard Kylo setup wizard ``/opt/kylo/setup/setup-wizard.sh`` to install Vault as a service.
You only need to supply four parameters: vault version, location, user and group.

   .. code-block:: shell

    /opt/kylo/setup/setup-wizard.sh

    # unrelated output truncated for brevity

    Would you like me to install a local Vault instance? Please enter y/n: y
    Enter Vault version you wish to install, hit Enter for '0.10.1':
    Enter the Vault home folder location, hit Enter for '/opt/vault':
    Enter the user Vault should run as, hit Enter for 'vault':
    Enter the linux group Vault should run as, hit Enter for 'vault':

   ..

You then should see the output similar to the following:

   .. code-block:: shell

    Installing Vault
    The Vault home folder is /opt/vault
    Using permissions vault:vault
    Installing Vault
    Downloading Vault 0.10.1
    Downloading Vault with certs verification
      % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                     Dload  Upload   Total   Spent    Left  Speed
    100 20.4M  100 20.4M    0     0  5124k      0  0:00:04  0:00:04 --:--:-- 5124k
    Installing Vault to '/opt/vault'
    Archive:  vault_0.10.1_linux_amd64.zip
      inflating: vault
    Creating Vault data directory '/opt/vault/data'
    Creating Vault configuration at '/opt/vault/current/conf'
    Creating Vault PID directory '/var/run/vault'
    Creating Vault log directory '/var/log/vault'
    Creating Vault service at '/etc/init.d/vault'
    Assigning owner and group to 'vault:vault'
    Initialising Vault
    Starting Vault ...
    Running:
    UID        PID  PPID  C STIME TTY          TIME CMD
    vault    26811     1  0 01:53 ?        00:00:00 /opt/vault/vault_0.10.1_linux_amd64/bin/vault server -config=/opt/vault/vault_0.10.1_linux_amd64/conf/vault.conf
    Unsealing Vault ...
    Restoring non-versioned K/V backend at secret/
    Success! Disabled the secrets engine (if it existed) at: secret/
    Success! Enabled the kv secrets engine at: secret/
    Stopping Vault ...
    Vault initialised
    Updating Kylo configuration
    Vault installation complete
    The unseal keys and root token have been stored in /opt/vault/vault_0.10.1_linux_amd64/conf/vault.init.

   ..

Take note of the following locations:

   - Data directory ``/opt/vault/data``. This is where Vault will store encrypted data. While data is encrypted, access to this directory should be limited.
   - Log directory ``/var/log/vault``
   - Configuration directory ``/opt/vault/current/conf``


Service
-------

   .. code-block:: shell

    service vault start
    service vault status
    service vault stop
    service vault restart

   ..


Vault Configuration
-------------------

By default configuration is stored in ``/opt/vault/current/conf``. This directory contains:

  - ``vault.conf`` which configures Vault parameters, such as storage locations, transport protocols, memory lock etc. For details see |HashiCorp_Vault_conf|.
    By default Vault is configured without TLS and with memory lock turned off. For maximum security consider running with TLS and with memory lock turned on.

  - ``vault.init`` which contains unseal keys and root key generated by standard ``vault operator init`` output. Access to this file should be limited.
    Vault uses this file to automatically unseal itself when started with ``service vault start``. For maximum security unseal keys should be securely distributed to
    designated security personnel and this file should be destroyed after Vault initialisation. If this file is destroyed Vault will not be able to automatically
    unseal itself. In this case use ``service vault run`` to start Vault and unseal Vault manually.


Kylo Configuration
------------------

.. _kylo_configuration:

Properties
==========

Configure Kylo for Vault using following properties in ``kylo-services/conf/application.properties``:

  - ``secret.vault.token`` Required, Kylo uses this access token to read from and write to Vault. When Vault is initialised by ``setup-wizard.sh`` this property is automatically updated
    with root token. Root token is not strictly necessary for Kylo, any token will work which is allowed to read from and write to ``secrets/kylo`` path in Vault.
    Access to Kylo's Vault token should be limited, because access to this token implies access to secrets stored in Vault.

  - ``secret.vault.root`` Optional, location in Vault where secrets are stored, defaults to ``secret/kylo/catalog/datasource``
  - ``secret.vault.host`` Optional, defaults to ``localhost``
  - ``secret.vault.port`` Optional, defaults to ``8200``
  - ``secret.vault.scheme`` Required for SSL connections, defaults to ``http``. Set to ``https`` for SSL
  - ``secret.vault.trustStoreDirectory`` Required for SSL connections, truststore directory
  - ``secret.vault.trustStoreName`` Required for SSL connections, truststore file name in truststore directory
  - ``secret.vault.trustStorePassword`` Required for SSL connections
  - ``secret.vault.trustSelfSignedCert`` Required for SSL connections, ``true`` or ``false``


Plugin
======

Kylo integration with Vault is implemented as a Kylo plugin. This allows to easily replace Vault with any other technology.
Plugin can be found at ``kylo-services/plugins/kylo-catalog-credential-vault-<version>.jar``.





.. |HashiCorp_Vault_Link| raw:: html

   <a href='https://www.vaultproject.io/' target="_blank">HashiCorp Vault Documentation</a>

.. |HashiCorp_Vault_conf| raw:: html

   <a href='https://www.vaultproject.io/docs/configuration/index.html' target="_blank">HashiCorp Vault Configuration</a>